/*INSTITUTO FEDERAL DO CEARÁ (IFCE)*/
/*BACHARELADO EM ENGENHARIA DE CONTROLE E AUTOMAÇÃO*/
/*SYLVIELLY S SOUSA*/
/*DISPOSITIVOS PERIFERICOS*/
//PROGRAMAS PROF. FABIO
//SEMESTRE 2020.1

//ATIVIDADE 02: ELABORAR PROGRAMA PARA LIGAR E DESLIGAR LEDS NA FORMA SEQUENCIAL REMOTAMENTE SIMULANDO UM CONTROLE EM MALHA ABERTA

//DEFINICAO DOS PINOS DA PORTA 'B' PARA SAIDA COM OS LEDS
#define LED_B0 pin_b0
#define LED_B1 pin_b1
#define LED_B2 pin_b2
#define LED_B3 pin_b3
#define LED_B4 pin_b4
#define LED_B5 pin_b5
#define LED_B6 pin_b6
#define LED_B7 pin_b7

//INICIO CABECALHO PADRAO
#include <18F4550.h>
#fuses HS, CPUDIV1,PLL5,USBDIV
#device ADC = 10
#use delay(clock=20000000)
#use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7)

//DECLARACAO DE VARIAVEIS
float valor_ad;               //VARIAVEL DO TIPO 'FLOAT'
float vad;

//INICIO DE PROGRAMA
void main(){
   
   //CONFIGURACAO PORTAS ANALOGICAS
   setup_adc_ports(AN0_TO_AN1|VSS_VDD);
   SETUP_ADC(ADC_CLOCK_INTERNAL);
   SET_ADC_CHANNEL(1);
  
               while(true){
                  //LEITURA DO POTENCIOMETRO
                  valor_ad = read_adc();
                  delay_ms(10);
                  vad = ((valor_ad*5)/1023);
                  
                  printf("SERIAL FUNCIONA");
                   if((vad>0)&&(vad<=5)){
                           
                           if((vad>0.625)&&(vad<=1.25)){
                              output_bit(LED_B0,1);
                              delay_ms(1000);
                              output_bit(LED_B0,0);
                              }
                              
                            if((vad>1.25)&&(vad<=1.875)){
                              output_bit(LED_B1,1);
                              delay_ms(1000);
                              output_bit(LED_B1,0);
                              }
                              
                              
                            if((vad>1.875)&&(vad<=2.5)){
                              output_bit(LED_B2,1);
                              delay_ms(1000);
                              output_bit(LED_B2,0);
                              }
                              
                            if((vad>2.5)&&(vad<=3.125)){
                              output_bit(LED_B3,1);
                              delay_ms(1000);
                              output_bit(LED_B3,0);
                              }
                              
                            if((vad>3.125)&&(vad<=3.75)){
                              output_bit(LED_B4,1);
                              delay_ms(1000);
                              output_bit(LED_B4,0);
                              }
                              
                            if((vad>3.75)&&(vad<=4.375)){
                              output_bit(LED_B5,1);
                              delay_ms(1000);
                              output_bit(LED_B5,0);
                              }
                           
                            if((vad>4.375)&&(vad<5)){
                              output_bit(LED_B6,1);
                              delay_ms(1000);
                              output_bit(LED_B6,0);
                              }
                 
                           if(vad==5){
                              output_bit(LED_B7,1);
                              delay_ms(1000);
                              output_bit(LED_B7,0);
                              }
                                      
                    }
                     
               }

}  //FIM DE PROGRAMA
