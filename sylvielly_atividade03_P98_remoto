/*INSTITUTO FEDERAL DO CEARÁ (IFCE)*/
/*BACHARELADO EM ENGENHARIA DE CONTROLE E AUTOMAÇÃO*/
/*SYLVIELLY S SOUSA*/
/*DISPOSITIVOS PERIFERICOS*/
//PROGRAMAS PROF. FABIO
//SEMESTRE 2020.1

//ATIVIDADE 03: ALTERE O PROGRAMA DA PÁGINA 98 PARA GIRAR UM MOTOR CC DE 0 A 100%, CORRESPONDENDO A UMA ENTRADA ANALÓGIVA DE 0 A 4 V NA ENTRADA AN1. 

#include <18F4550.h>
#device adc=10
#fuses HS, CPUDIV1,PLL5,USBDIV
#use delay(clock=20000000)
#use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7)
#use standard_io(B)                             //comentar linha caso a biblioteca do LCD seja diferente
#define use_portB_lcd TRUE                      //comentar linha caso a biblioteca do LCD seja diferente
#define LCD_TYPE 2
#include <LCD.c>

void main(){
               lcd_init();
               
//CONFIGURACAO TIMER2 PARA PWM
setup_timer_2(T2_DIV_BY_4, 249, 1);
setup_adc_ports(AN0_TO_AN1|VSS_VDD);
SETUP_ADC(ADC_CLOCK_INTERNAL);
set_adc_channel(1);

                  while(true){
                        //ENVIO DE INFORMACAO DA VELOCIDADE DO MOTOR
                        lcd_gotoxy(1,1);
                        printf(lcd_putc,"\f Motor CC ");

                        //DEFINICAO DE VARIAVEIS
                        float V_ad;
                        int PWM;
                        float AD;
                        int porcentagem;
                        float analogico;
  
                        analogico = read_adc();
                        delay_us(10);
                        AD = analogico;
                        lcd_gotoxy(1,2);
                        printf(lcd_putc,"\f");
                        
                        if((AD>0)&&(AD<=1023)){
                                 V_ad = ((4/1023)*AD);
                                 porcentagem = ((V_ad/4)*100);
                                 PWM = ((porcentagem/100)*250);
                                 
                                 set_pwm1_duty(PWM);
                                 setup_ccp1(CCP_PWM);
                              }
                              else{
                                 PWM = 0;
                              }
                              
}
}

  
